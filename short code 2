//c++ solution

int bsearch(int arr[],int n,int x,int flag){

    int low = 0;

    int high = n-1;

    int ans = -1;

    while(low<=high){

        int mid = low+(high-low)/2;

        if(arr[mid]==x and flag){

            ans = mid;

            low = mid+1;

        }else if(arr[mid]==x and !flag){

            ans =  mid;

            high = mid-1;

        }else if(arr[mid]<x){

            low = mid+1;

        }else

            high = mid-1;

    }

    return ans;

}

 

vector<int> find(int arr[], int n , int x )

{

    // code here

    int first = bsearch(arr,n,x,0);

    int second = bsearch(arr,n,x,1);

    return {first,second};

}
